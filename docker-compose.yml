version: '3.6'

services:
  elasticsearch:
    build:
      context: ./elasticsearch
      args:
        FLAVOUR_EFK: $FLAVOUR_EFK
        VERSION_EFK: $VERSION_EFK
        VERSION_ROR: $VERSION_ROR
    container_name: elasticsearch
    env_file:
      - ./elasticsearch/elasticsearch.properties
    hostname: elasticsearch
    networks:
      - efk
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/config/readonlyrest.yml:/usr/share/elasticsearch/config/readonlyrest.yml

  fluentd:
    build:
      context: ./fluentd
      args:
        VERSION_FLUENTD: $VERSION_FLUENTD
    container_name: fluentd
    depends_on:
      - elasticsearch
    env_file:
      - ./fluentd/fluentd.properties
    hostname: fluentd
    networks:
      - efk
    ports:
      - "24223:24223"
      - "24223:24223/udp"
      - "24224:24224"
      - "24224:24224/udp"
      - "5140:5140"
      - "5140:5140/udp"
    volumes:
      - ./fluentd/config:/fluentd/etc
      - ./fluentd/certs:/fluentd/certs

  kibana:
    build:
      context: ./kibana
      args:
        VERSION_EFK: $VERSION_EFK
        FLAVOUR_EFK: $FLAVOUR_EFK
    container_name: kibana
    depends_on:
      - fluentd
    hostname: kibana
    networks:
      - efk
    ports:
      - "5601:5601"
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml

  elastichq:
    build:
      context: ./elasticHQ
      args:
        VERSION_ELASTICHQ: $VERSION_ELASTICHQ
    container_name: elastichq
    depends_on:
      - elasticsearch
    hostname: elastichq
    networks:
      - efk
    ports:
      - "5000:5000"

networks:
  efk:
    driver: bridge
