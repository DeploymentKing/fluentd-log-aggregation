readonlyrest:
  ssl:
    # put the keystore in the same dir with elasticsearch.yml
#    keystore_file: "keystore.jks"
#    keystore_pass: readonlyrest
#    key_pass: readonlyrest
    allowed_protocols: [TLSv1.2]
    allowed_ciphers: [TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256]

  response_if_req_forbidden: Forbidden by Readonly Rest!

  access_control_rules:
  - name: Accept all requests from localhost
    type: allow
    hosts: [127.0.0.1]
    verbosity: error

  - name: workaround
    type: allow
    actions:
      - "indices:data/read/field_caps*"
      - "indices:admin/template/put"
    verbosity: info

  - name: "::LOGSTASH::"
    type: allow
    # auth_key is good for testing, but replace it with `auth_key_sha1`!
    auth_key: logstash:logstash
    actions:
      - "cluster:monitor/main"
      - "indices:admin/types/exists"
      - "indices:data/read/*"
      - "indices:data/write/*"
      - "indices:admin/template/*"
      - "indices:admin/create"
    indices: ["logstash-*"]
    verbosity: error

  - name: "::FLUENTD::"
    type: allow
    # auth_key is good for testing, but replace it with `auth_key_sha1`!
    auth_key: fluentd:fluentd
    actions:
      - "cluster:monitor/main"
      - "indices:admin/types/exists"
      - "indices:data/read/*"
      - "indices:data/write/*"
      - "indices:admin/template/*"
      - "indices:admin/create"
    indices: ["fluentd-*"]
    verbosity: error

  # We trust Kibana's server side process, full access granted via HTTP authentication
  - name: "::KIBANA-SRV::"
    type: allow
    # auth_key is good for testing, but replace it with `auth_key_sha256`!
    auth_key: kibana:kibana
    hosts: [kibana]
    kibana_access: admin
    verbosity: error # don't log successful request

  - name: "::ELASTICHQ::"
    type: allow
    # auth_key is good for testing, but replace it with `auth_key_sha1`!
    auth_key: elastichq:elastichq
    actions:
      - "cluster:monitor/*"
      - "indices:monitor/*"
    verbosity: error

  - name: "::TERMINAL::"
    type: allow
    # auth_key is good for testing, but replace it with `auth_key_sha1`!
    auth_key: terminal:password
    actions:
      - "cluster:monitor/*"
    verbosity: error
